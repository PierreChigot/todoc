@startuml

title __Todoc's Class Diagram__\n


package Database <<Database>> #d7ccc8{
  abstract class AppDatabase {
          {static} - sInstance : AppDatabase
          {static} + getInstance()
          {abstract} + projectDao()
          {abstract} + taskDao()
          {static} - populateInitialData()
      }

      interface ProjectDao {
          {abstract} + createProject()
          {abstract} + getProjectsLiveData()
      }


      interface TaskDao {
          {abstract} + deleteAll()
          {abstract} + deleteTask()
          {abstract} + getTasksLiveData()
          {abstract} + insertTask()
          {abstract} + updateTask()
      }
      AppDatabase -|> RoomDatabase
 }



 package Model <<Frame>> #c5e1a5{
    class Project {
          - color : int
          - id : long
          - name : String
          + Project()
          + getColor()
          + getId()
          + getName()
          + toString()
     }

    class Task {
          - creationTimestamp : long
          - id : long
          - name : String
          - projectId : long
          + Task()
          + getCreationTimestamp()
          + getId()
          + getName()
          + getProjectId()
          + setCreationTimestamp()
          + setId()
          + setName()
          + setProjectId()
    }
 }
 package View #ffe0b2{
      class MainActivity {
          - mDialog : AlertDialog
          - mDialogEditText : EditText
          - mDialogSpinner : Spinner
          - mProjects : List<Project>
          + onCreate()
          + onCreateOptionsMenu()
          + onDeleteTask()
          + onOptionsItemSelected()
          - getAddTaskDialog()
          - onPositiveButtonClick()
          - populateDialogSpinner()
          - showAddTaskDialog()
      }
      class TasksAdapter {
        + onBindViewHolder()
        + onCreateViewHolder()
        ~ TasksAdapter()
      }
      MainActivity .|> TasksAdapter.DeleteTaskListener
      TasksAdapter o- TasksAdapter.DeleteTaskListener
      TasksAdapter +- DeleteTaskListener
      TasksAdapter +- TasksAdapter.DiffCallback
      TasksAdapter +- TasksAdapter.ViewHolder
 }
 package TodocViewModel  <<Node>> #81d4fa{
      class MainViewModel {
          - mNoTaskLiveData : MutableLiveData<Boolean>
          - mProjectsLiveData : LiveData<List<Project>>
          - mSingleLiveEvent : SingleLiveEvent<ViewAction>
          - mSortingMethodLiveData : MutableLiveData<SortingMethod>
          - mUiModelsLiveData : MediatorLiveData<List<TaskUIModel>>
          ~ MainViewModel()
          ~ addTask()
          ~ deleteTask()
          ~ getNoTaskLiveData()
          ~ getProjectsLiveData()
          ~ getUiModelsLiveData()
          ~ getViewActionLiveData()
          ~ sortingTasks()
          - combineProjectsAndTasks()
          - map()
          - wireUpMediator()
      }

      class MainViewModel.DeleteDataAsyncTask {
          - mTaskId : long
          # doInBackground()
          - DeleteDataAsyncTask()
      }

     class MainViewModel.InsertDataAsyncTask {
          - mProjectId : long
          # doInBackground()
          - InsertDataAsyncTask()
      }


      enum SortingMethod {
        ALPHABETICAL
        ALPHABETICAL_INVERTED
        OLD_FIRST
        PROJECT
        RECENT_FIRST
      }


      class TaskUIModel {
          - mColorInt : int
          - mId : long
          - mName : String
          + equals()
          + getId()
          + getName()
          ~ TaskUIModel()
          ~ getColorInt()
      }


      interface DeleteTaskListener {
          {abstract} + onDeleteTask()
      }

      class TasksAdapter.DiffCallback {
          + areContentsTheSame()
          + areItemsTheSame()
      }

      class TasksAdapter.ViewHolder {
          - mDeleteButton : ImageView
          - mImgProject : ImageView
          - mNameTask : TextView
          - mProjectName : TextView
          ~ ViewHolder()
          ~ bind()
      }


      enum ViewAction {
        DIALOG_DISMISS
        ERROR_TASK_NAME
        SHOW_DIALOG
      }

      class ViewModelFactory {
          {static} - sFactory : ViewModelFactory
          + create()
          {static} + getInstance()
          - ViewModelFactory()
      }


  



MainActivity o-- MainViewModel : mViewModel
MainActivity -- ViewModelFactory : ViewModelProvider

SortingMethod -[hidden]> SortingMethod
TaskUIModel -[hidden]>ViewAction
MainViewModel o-- ViewAction : LiveData
MainViewModel o-- TaskUIModel : LiveData
MainViewModel o-- ProjectDao : mProjectDao LiveData
MainViewModel o-- SortingMethod : LiveData
MainViewModel o-- TaskDao : mTaskDao LiveData
MainViewModel +-- MainViewModel.DeleteDataAsyncTask
MainViewModel +-- MainViewModel.InsertDataAsyncTask
MainViewModel.DeleteDataAsyncTask o- TaskDao : mTaskDao
MainViewModel.InsertDataAsyncTask o--- Task : mTask
MainViewModel.InsertDataAsyncTask o-- TaskDao : mTaskDao


ViewModelFactory o- ProjectDao : projectDao
ViewModelFactory o- TaskDao : taskDao




@enduml
