@startuml

title __Todoc's Class Diagram__\n


package Database <<Database>> #d7ccc8{
  abstract class AppDatabase {
          {static} - instance
          {static} + getInstance()
          {abstract} + projectDao()
          {abstract} + taskDao()
          {static} - populateInitialData()
      }

      interface ProjectDao {
          {abstract} + createProject()
          {abstract} + getProjectsLiveData()
      }


      interface TaskDao {
          {abstract} + deleteAll()
          {abstract} + deleteTask()
          {abstract} + getTasksLiveData()
          {abstract} + insertTask()
          {abstract} + updateTask()
      }
 }



 package Model <<Frame>> #c5e1a5{
    class Project {
          - color : int
          - id : long
          - name : String
          + getColor()
          + getId()
          + getName()
          + toString()
     }

    class Task {
          - creationTimestamp : long
          - id : long
          - name : String
          - projectId : long
          + getCreationTimestamp()
          + getId()
          + getName()
          + getProjectId()
          + setCreationTimestamp()
          + setId()
          + setName()
          + setProjectId()
    }
 }
 package View #ffe0b2{
      class MainActivity {
          - dialog : AlertDialog
          - dialogEditText : EditText
          - dialogSpinner : Spinner
          - projects : List<Project>
          + onCreate()
          + onCreateOptionsMenu()
          + onDeleteTask()
          + onOptionsItemSelected()
          - getAddTaskDialog()
          - onPositiveButtonClick()
          - populateDialogSpinner()
          - showAddTaskDialog()
      }
      class TasksAdapter {
        + onBindViewHolder()
        + onCreateViewHolder()
        ~ TasksAdapter()
      }
       interface DeleteTaskListener {
                {abstract} + onDeleteTask()
            }

            class DiffCallback {
                + areContentsTheSame()
                + areItemsTheSame()
            }

            class ViewHolder {
                - deleteButton : ImageView
                - imgProject : ImageView
                - nameTask : TextView
                - projectName : TextView
                ~ bind()
            }
      MainActivity - TasksAdapter

      TasksAdapter -- DeleteTaskListener
      TasksAdapter -- DiffCallback
      TasksAdapter -- ViewHolder
      MainActivity .|> DeleteTaskListener
 }
 package ViewModel  <<Node>> #81d4fa{
      class MainViewModel {
          - projectDao : ProjectDao
          - taskDao : TaskDao
          - noTaskLiveData : MutableLiveData<Boolean>
          - projectsLiveData : LiveData<List<Project>>
          - singleLiveEvent : SingleLiveEvent<ViewAction>
          - sortingMethodLiveData : MutableLiveData<SortingMethod>
          - uiModelsLiveData : MediatorLiveData<List<TaskUIModel>>
          - sortingMethod  : SortingMethod
          ~ addTask()
          ~ deleteTask()
          ~ getNoTaskLiveData()
          ~ getProjectsLiveData()
          ~ getUiModelsLiveData()
          ~ getViewActionLiveData()
          ~ sortingTasks()
          - combineProjectsAndTasks()
          - map()
          - wireUpMediator()
      }

      class DeleteDataAsyncTask {
          - taskDao : TaskDao
          - taskId : long
          # doInBackground()
      }

     class InsertDataAsyncTask {
          - taskDao : TaskDao
          - projectId : long
          # doInBackground()
      }


      enum SortingMethod {
        ALPHABETICAL
        ALPHABETICAL_INVERTED
        OLD_FIRST
        PROJECT
        RECENT_FIRST
      }


      class TaskUIModel {
          - colorInt : int
          - id : long
          - name : String
          + equals()
          + getId()
          + getName()
          ~ getColorInt()
      }

      enum ViewAction {
        DIALOG_DISMISS
        ERROR_TASK_NAME
        SHOW_DIALOG
      }

      class ViewModelFactory {
          - projectDao : ProjectDao
          - taskDao : TaskDao
          + create()
          {static} + getInstance()
      }


MainActivity -- MainViewModel
MainActivity -- ViewModelFactory

SortingMethod -[hidden]> SortingMethod
TaskUIModel -[hidden]>ViewAction
MainViewModel -- ViewAction
MainViewModel -- TaskUIModel
MainViewModel -- ProjectDao
MainViewModel -- SortingMethod
MainViewModel -- TaskDao
MainViewModel -- DeleteDataAsyncTask
MainViewModel -- InsertDataAsyncTask
DeleteDataAsyncTask - TaskDao
InsertDataAsyncTask -- Task
InsertDataAsyncTask -- TaskDao


ViewModelFactory - ProjectDao
ViewModelFactory - TaskDao




@enduml
